<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>flutter on MayJuun</title><link>https://mayjuun.com/tags/flutter/</link><description>Recent content in flutter on MayJuun</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Oct 2021 19:11:04 +0000</lastBuildDate><atom:link href="https://mayjuun.com/tags/flutter/index.xml" rel="self" type="application/rss+xml"/><item><title>WVEMS Protocols - Interactive, Searchable PDFs</title><link>https://mayjuun.com/blog/8-wvems-protocols/</link><pubDate>Tue, 05 Oct 2021 19:11:04 +0000</pubDate><guid>https://mayjuun.com/blog/8-wvems-protocols/</guid><description>Intro - Today (Oct 5, 2021), we at MayJuun are proud to officially release the WVEMS Protocols Flutter app on the Apple App Store and the Google Play Store.
This was a wonderful project built in collaboration with the Western Virginia Emergency Medical Services Council, Inc, who provides Emergency Medicine Services (EMS) in the state of Virginia, specificially in the following 7 cities:
Covington Danville Martinsville Radford Roanoke Salem and 12 counties:</description></item><item><title>My First FHIR/Flutter App</title><link>https://mayjuun.com/fhirfli/1-first-fhir-flutter-app/</link><pubDate>Sun, 16 May 2021 23:55:32 +0000</pubDate><guid>https://mayjuun.com/fhirfli/1-first-fhir-flutter-app/</guid><description>How To Start Link to full Github Code
For this, I am going to assume that you already know how to install flutter, dart and VS Code (or android studio) on your computer. If not, there are many good tutorials - many found on this very website. If you don&amp;rsquo;t have it, go get it, then you can come back here.
Following these instructions here, I first created the basic flutter application.</description></item><item><title>Questionnaires and Surveys</title><link>https://mayjuun.com/fhirfli/5-questionnaires-and-surveys/</link><pubDate>Sun, 16 May 2021 23:55:03 +0000</pubDate><guid>https://mayjuun.com/fhirfli/5-questionnaires-and-surveys/</guid><description>FHIR® Questionnaire As usual, the FHIR® documentation, while complete, is difficult to get through in order to understand how to structure surveys. John has created a really nice demo app to render the Prapare® Survey specifically (https://github.com/FireJuun/prapare). There is also now a very nice dynamic renderer package called Faiadashu, thanks Tilo!
I&amp;rsquo;m also working on creating surveys from a REDCap library, and also from a spreadsheet, but those are works in progress.</description></item><item><title>Flutter Servers</title><link>https://mayjuun.com/fhirfli/4-flutter-servers/</link><pubDate>Sun, 16 May 2021 23:54:53 +0000</pubDate><guid>https://mayjuun.com/fhirfli/4-flutter-servers/</guid><description>This is a reproduction of the readme from the repo here. Have you ever wanted to try and host your Flutter web app but weren&amp;rsquo;t sure how to do it? I like Dart and Flutter, and didn&amp;rsquo;t want to have to learn another language just to have a web server. Luckily, there are a couple of packages that already have this functionality. I&amp;rsquo;ve just detailed how they work, and how they can be placed in a docker container for easy deployment (including on Google Cloud!</description></item><item><title>Fish and Flutter: 5 Step Install</title><link>https://mayjuun.com/blog/7-fish-and-flutter/</link><pubDate>Fri, 14 May 2021 14:04:09 +0000</pubDate><guid>https://mayjuun.com/blog/7-fish-and-flutter/</guid><description>Intro - This is a supplemental post to the YouTube video tutorial that shows how to install iTerm, Fish, and Flutter on a Mac.
The video boils everything down to 5 steps, which I will define here.
Step 1: Homebrew + Fish + iTerm2 To get started, you need to follow the Automatic Installation steps on my iterm-fish-fisher repo, or you can just copy/paste the same steps that are listed below.</description></item><item><title>GCP Healthcare API Part 1: Creating FHIR® Store</title><link>https://mayjuun.com/fhirfli/2-gcp-fhir-flutter-1/</link><pubDate>Mon, 15 Mar 2021 15:24:35 +0000</pubDate><guid>https://mayjuun.com/fhirfli/2-gcp-fhir-flutter-1/</guid><description>Creating FHIR Store I&amp;rsquo;ve been working on athentication and authorization for FHIR® (including SMART, although not solely). And like so many things, it seems harder than it should be. Google has been giving me problems, so as I work through it, I&amp;rsquo;m going to document my steps, in the hope it will help me (and maybe someone else) in the future.
The first step is that you have to sign up for Google Cloud Platform (oh yeah, while I really like Google&amp;rsquo;s tools, they&amp;rsquo;re not paying me anything).</description></item><item><title>GCP Healthcare API Part 2: Attempting Authentication</title><link>https://mayjuun.com/fhirfli/3-gcp-fhir-flutter-2-/</link><pubDate>Mon, 15 Mar 2021 15:24:35 +0000</pubDate><guid>https://mayjuun.com/fhirfli/3-gcp-fhir-flutter-2-/</guid><description>GCP Healthcare API - Attempting Authentication Again, I&amp;rsquo;ve found this to be tricky, hence why I&amp;rsquo;m documenting here, to hopefully make it easier for someone else. Remember, we should now have a FHIR® store. The one I&amp;rsquo;ve setup exists at:
https://healthcare.googleapis.com/v1/projects/fhir-fli/locations/us/datasets/fhir-fli/fhirStores/fhir-fli
So I&amp;rsquo;ve probably thrown these words around and not completely understanding the difference, so, for your edification:
Authentication: who you are Authorization: what you can do Auditing logs: what you did This comes from Google&amp;rsquo;s page on Authentication.</description></item><item><title>Get Fluttered: MVC+S Architecture, Example</title><link>https://mayjuun.com/blog/2-get-fluttered-mvcs/</link><pubDate>Thu, 14 Jan 2021 19:52:02 +0000</pubDate><guid>https://mayjuun.com/blog/2-get-fluttered-mvcs/</guid><description>Intro - To all who watched my original GetFluttered: MVC+S Architecture video, I want to thank you immensely for your patience.
Before making new GetFluttered videos, we wanted to implement:
A means to provide written, supplemental info &amp;hellip; Meta-Blog; A complex, production-level MVC+S example &amp;hellip; PRAPARE app; &amp;amp; A means for others to join / collaborate &amp;hellip; FlutterJuun Slack invite. With these elements now firmly established, it should be easier to follow along with GetFluttered content by comparing simple + complex code examples that achieve the same objective.</description></item></channel></rss>